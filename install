#!/bin/bash
set -e

sudo dnf --refresh update -y
sudo dnf -y install dnf-plugins-core

sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

sudo dnf install -y \
  ansible \
  chromium \
  cmake \
  docker-ce \
  gcc-c++ \
  gnome-tweak-tool \
  htop \
  lcov \
  python-devel \
  tig \
  tmux \
  util-linux-user \
  vim-X11 \
  zsh \

if [[ ! -x "$(command -v keybase)" ]]; then
 sudo dnf install -y https://prerelease.keybase.io/keybase_amd64.rpm
fi

sudo dnf group install -y "Development Libraries" "Development Tools"

# Enable and start docker daemon
sudo usermod -aG docker "$USER"
sudo systemctl enable docker
sudo systemctl start docker

# Awscli
pip install --user awscli flake8 boto

# Zprezto
if [ ! -d "$HOME/.zprezto" ]; then
	git clone --recursive https://github.com/sorin-ionescu/prezto.git "${ZDOTDIR:-$HOME}/.zprezto"
fi


# Fasd
if [[ ! -x "$(command -v fasd)" ]]; then
  wget https://github.com/clvv/fasd/tarball/1.0.1
  tar xvzf 1.0.1
  rm -f 1.0.1
  cd clvv-fasd-4822024
  sudo make install
  cd ..
  rm -rf clvv-fasd-4822024
fi

# Vim Vundle
if [ ! -d "$HOME/.vim/bundle/vundle" ]; then
    git clone https://github.com/VundleVim/Vundle.vim.git $HOME/.vim/bundle/vundle
    mkdir -p ~/.vim/colors
fi

## Install tools
set_current_version() {
  echo "Setting current $1 to $2"
  ln -sf $HOME/.local/bin/$1-$2 $HOME/.local/bin/$1
}

# kubectl
get_kubectl() {
  echo "Getting Kubectl $1"
  if [[ ! -f "$HOME/.local/bin/kubectl-$1" ]]; then
    curl -LO "https://storage.googleapis.com/kubernetes-release/release/v$1/bin/linux/amd64/kubectl"
    chmod +x kubectl
    mv kubectl $HOME/.local/bin/kubectl-$1
  fi
}

get_kubectl "1.9.1"
get_kubectl "1.7.12"
get_kubectl "1.8.6"

set_current_version "kubectl" "1.9.1"

# helm
get_helm() {
  echo "Getting Helm $1"
  if [[ ! -f "$HOME/.local/bin/helm-$1" ]]; then
    wget -O $HOME/helm.tar.gz "https://storage.googleapis.com/kubernetes-helm/helm-v$1-linux-amd64.tar.gz"
    tar xvzf $HOME/helm.tar.gz -C $HOME
    mv $HOME/linux-amd64/helm $HOME/.local/bin/helm-$1
    rm -rf $HOME/linux-amd64 $HOME/helm.tar.gz
  fi
}

get_helm "2.8.0-rc.1"
get_helm "2.7.2"
get_helm "2.6.2"

set_current_version "helm" "2.7.2"

# kops
get_kops() {
  echo "Getting kops $1"
  if [[ ! -f "$HOME/.local/bin/kops-$1" ]]; then
    wget -O $HOME/kops https://github.com/kubernetes/kops/releases/download/$1/kops-linux-amd64
    chmod +x $HOME/kops
    mv $HOME/kops $HOME/.local/bin/kops-$1
  fi
}

get_kops "1.8.0"
get_kops "1.7.1"

set_current_version "kops" "1.8.0"

# # Vault
get_vault() {
  echo "Getting vault $1"
  if [[ ! -f "$HOME/.local/bin/vault-$1" ]]; then
    wget -O $HOME/vault.zip https://releases.hashicorp.com/vault/$1/vault_$1_linux_amd64.zip
    unzip $HOME/vault.zip -d $HOME
    mv $HOME/vault $HOME/.local/bin/vault-$1
    rm -f $HOME/vault.zip
  fi
}

get_vault "0.9.1"
get_vault "0.8.3"

set_current_version "vault" "0.9.1"

# Create symlinks for config files
echo "Create symlink for tmux configuration"
ln -sf $PWD/config/tmux.conf $HOME/.tmux.conf

echo "Create symlink for zprezto configuration"
ln -sf $PWD/config/zpreztorc $HOME/.zpreztorc
ln -sf $PWD/config/zshenv $HOME/.zshenv
ln -sf $PWD/config/zshrc $HOME/.zshrc

echo "Create symlink for gitconfig"
ln -sf $PWD/config/gitconfig $HOME/.gitconfig

echo "Create symlink for vim"
ln -sf $PWD/vim/vimrc $HOME/.vimrc
ln -sf $PWD/vim/monokai-phoenix.vim $HOME/.vim/colors/monokai-phoenix.vim
vimx +PluginInstall +qall

echo "Create symlink for x509"
sudo ln -sf $PWD/scripts/x509 /usr/bin/x509

chsh -s /bin/zsh
